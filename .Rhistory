library(Stddif)
library(Stddif)
library(Stddif)
library(Stddif)
input_data_res <- input_data[,!(colnames(input_data) %in% treat_vec_name)]
vec_tr <- c(rep("a",200*0.06),rep("b",200*0.44),rep("c",200*0.5))
vec_con <- c(rep("a",180*0.03),rep("b",180*0.735),rep("c",180*0.24))
input_data = rbind(data.frame(treat = 1, vec = vec_tr),data.frame(treat = 0, vec = vec_con))
input_data
input_data_res <- input_data[,!(colnames(input_data) %in% treat_vec_name)]
treat_vec_name = "treat"
input_data_res <- input_data[,!(colnames(input_data) %in% treat_vec_name)]
val_names <- colnames(input_data_res)
val_names
input_data_res
dim(input_data_res)
dim(input_data)
is.data.frame(input_data_res)
is.data.frame(input_data)
input_data_res <- input_data[,!(colnames(input_data) %in% treat_vec_name)]
is.data.frame(input_data_res)
val_names
input_data = rbind(data.frame(treat = 1, vec = vec_tr, vec_2 = vec_tr_2),data.frame(treat = 0, vec = vec_con, vec_2 = vec_con_2))
vec_tr_2 <- rnorm(200, mean = 51 , sd = 15)
vec_con_2 <- rnorm(180, mean = 51 , sd = 13)
input_data = rbind(data.frame(treat = 1, vec = vec_tr, vec_2 = vec_tr_2),data.frame(treat = 0, vec = vec_con, vec_2 = vec_con_2))
input_data_res <- input_data[,!(colnames(input_data) %in% treat_vec_name)]
input_data_res
is.data.frame(input_data_res)
val_names <- colnames(input_data_res)
val_names
val_names
input_data = rbind(data.frame(treat = 1, vec = vec_tr),data.frame(treat = 0, vec = vec_con))
input_data_res <- input_data[,!(colnames(input_data) %in% treat_vec_name)]
!is.data.frame(input_data_res
)
es <- fun_sef(input_data,treat_vec_name)
es
mode(es)
is.vector(es)
es <- fun_sef(input_data,treat_vec_name)[1,]
es
attr(es)
attr(es,which = "name") <- "a"
es
es <- fun_sef(input_data,treat_vec_name)[1,]
names(es) <- "a"
es
names(es) <-  colnames(input_data)[!(colnames(input_data) %in% treat_vec_name)]
es
input_data = rbind(data.frame(treat = 1, vec = vec_tr, vec_2 = vec_tr_2),data.frame(treat = 0, vec = vec_con, vec_2 = vec_con_2))
input_data_res <- input_data[,!(colnames(input_data) %in% treat_vec_name)]
!is.data.frame(input_data_res)
val_names <- colnames(input_data_res)
val_names
c("trea_vec_name",val_neme)
input_data_res <- input_data[,!(colnames(input_data) %in% treat_vec_name)]
input_data_res
val_names_vec <- colnames(input_data_res)
val_names_vec
return_vec <- vector(length = val_names_vec)
return_vec <- vector(length = length(val_names_vec))
return_vec
for(i in 1:length(val_names_vec)){
val_neme <- val_names_vec[i]
input_data_tar <- input_data[,c(trea_vec_name,val_neme)]
es <- fun_sef(input_data_tar,treat_vec_name)[1,]
names(es) <- val_neme
return_vec[i] <- es
}
for(i in 1:length(val_names_vec)){
val_neme <- val_names_vec[i]
input_data_tar <- input_data[,c(treat_vec_name,val_neme)]
es <- fun_sef(input_data_tar,treat_vec_name)[1,]
names(es) <- val_neme
return_vec[i] <- es
}
i
val_neme <- val_names_vec[i]
val_neme
input_data_tar <- input_data[,c(treat_vec_name,val_neme)]
input_data_tar
es <- fun_sef(input_data_tar,treat_vec_name)[1,]
fun_sef(input_data_tar,treat_vec_name)
fun_sef_cat <- function (vec_tr, vec_con) {
mat_tr <- dummies::dummy(vec_tr)[,-ncol(dummies::dummy(vec_tr))]
mat_con <- dummies::dummy(vec_con)[,-ncol(dummies::dummy(vec_con))]
p_tr <- colMeans(mat_tr)
p_con <- colMeans(mat_con)
S <- (cov(mat_tr) + cov(mat_con))/2
es <- sqrt(t(matrix(p_tr-p_con)) %*% ginv(S) %*% matrix(p_tr-p_con))
return(es[,1])
}
val_names_vec <- colnames(input_data_res)
return_vec <- vector(length = length(val_names_vec))
for(i in 1:length(val_names_vec)){
val_neme <- val_names_vec[i]
input_data_tar <- input_data[,c(treat_vec_name,val_neme)]
es <- fun_sef(input_data_tar,treat_vec_name)
names(es) <- val_neme
return_vec[i] <- es
}
return_vec
names(es)
names(return_vec) <- val_names_vec
return_vec
fun_sef_df <- function (input_data, treat_vec_name) {
input_data_res <- input_data[,!(colnames(input_data) %in% treat_vec_name)]
if(!is.data.frame(input_data_res)){
es <- fun_sef(input_data,treat_vec_name)
names(es) <-  colnames(input_data)[!(colnames(input_data) %in% treat_vec_name)]
return_vec <- es
}else{
val_names_vec <- colnames(input_data_res)
return_vec <- vector(length = length(val_names_vec))
for(i in 1:length(val_names_vec)){
val_neme <- val_names_vec[i]
input_data_tar <- input_data[,c(treat_vec_name,val_neme)]
es <- fun_sef(input_data_tar,treat_vec_name)
return_vec[i] <- es
}
names(return_vec) <- val_names_vec
return(return_vec)
}
}
input_data = rbind(data.frame(treat = 1, vec = vec_tr),data.frame(treat = 0, vec = vec_con))
fun_sef_df(input_data,treat_vec_name)
fun_sef_df <- function (input_data, treat_vec_name) {
input_data_res <- input_data[,!(colnames(input_data) %in% treat_vec_name)]
if(!is.data.frame(input_data_res)){
es <- fun_sef(input_data,treat_vec_name)
names(es) <-  colnames(input_data)[!(colnames(input_data) %in% treat_vec_name)]
return_vec <- es
}else{
val_names_vec <- colnames(input_data_res)
return_vec <- vector(length = length(val_names_vec))
for(i in 1:length(val_names_vec)){
val_neme <- val_names_vec[i]
input_data_tar <- input_data[,c(treat_vec_name,val_neme)]
es <- fun_sef(input_data_tar,treat_vec_name)
return_vec[i] <- es
}
names(return_vec) <- val_names_vec
}
return(return_vec)
}
fun_sef_df(input_data,treat_vec_name)
fun_sef <- function (input_data,treat_vec_name) {
if(ncol(input_data) != 2){
print("ERROR::Invarid column name!")
}else{
treat_vec <- input_data[,treat_vec_name]
if(length(unique(treat_vec)) < 2){
print("ERROR::Invarid treatment category!")
}else{
vec <- input_data[,!(colnames(input_data) %in% treat_vec_name)]
if(is.numeric(vec)){
vec_tr <- vec[treat_vec == unique(treat_vec)[1]]
vec_con <- vec[treat_vec == unique(treat_vec)[2]]
es <- fun_sef_num(vec_tr, vec_con)
}else{
if(length(unique(vec)) > 2){
vec_tr <- vec[treat_vec == unique(treat_vec)[1]]
vec_con <- vec[treat_vec == unique(treat_vec)[2]]
es <- fun_sef_cat(vec_tr, vec_con)
}else{
vec <- dummies::dummy(vec)[,1]
vec_tr <- vec[treat_vec == unique(treat_vec)[1]]
vec_con <- vec[treat_vec == unique(treat_vec)[2]]
es <- fun_sef_num(vec_tr, vec_con)
}
}
return(es)
}
}
}
fun_sef_df <- function (input_data, treat_vec_name) {
input_data_res <- input_data[,!(colnames(input_data) %in% treat_vec_name)]
if(!is.data.frame(input_data_res)){
es <- fun_sef(input_data,treat_vec_name)
names(es) <-  colnames(input_data)[!(colnames(input_data) %in% treat_vec_name)]
return_vec <- es
}else{
val_names_vec <- colnames(input_data_res)
return_vec <- vector(length = length(val_names_vec))
for(i in 1:length(val_names_vec)){
val_neme <- val_names_vec[i]
input_data_tar <- input_data[,c(treat_vec_name,val_neme)]
es <- fun_sef(input_data_tar,treat_vec_name)
return_vec[i] <- es
}
names(return_vec) <- val_names_vec
}
return(return_vec)
}
fun_sef_df(input_data,treat_vec_name)
library(Stddif)
fun_sef_df(input_data,treat_vec_name)
library(Stddif)
fun_sef_df(input_data,treat_vec_name)
input_data = rbind(data.frame(treat = 1, vec = vec_tr),data.frame(treat = 0, vec = vec_con))
fun_sef_df <- function (input_data, treat_vec_name) {
input_data_res <- input_data[,!(colnames(input_data) %in% treat_vec_name)]
if(!is.data.frame(input_data_res)){
es <- fun_sef(input_data,treat_vec_name)
names(es) <-  colnames(input_data)[!(colnames(input_data) %in% treat_vec_name)]
return_vec <- es
}else{
val_names_vec <- colnames(input_data_res)
return_vec <- vector(length = length(val_names_vec))
for(i in 1:length(val_names_vec)){
val_neme <- val_names_vec[i]
input_data_tar <- input_data[,c(treat_vec_name,val_neme)]
es <- fun_sef(input_data_tar,treat_vec_name)
return_vec[i] <- es
}
names(return_vec) <- val_names_vec
}
return(return_vec)
}
fun_sef_df(input_data,treat_vec_name)
library("MASS", lib.loc="E:/Program Files/R/R-3.0.2/library")
fun_sef_df(input_data,treat_vec_name)
input_data = rbind(data.frame(treat = 1, vec = vec_tr, vec_2 = vec_tr_2),data.frame(treat = 0, vec = vec_con, vec_2 = vec_con_2))
fun_sef_df(input_data,treat_vec_name)
library(Stddif)
input_data
input_data = rbind(data.frame(treat = 1, vec = vec_tr, vec_2 = vec_tr_2),data.frame(treat = 0, vec = vec_con, vec_2 = vec_con_2))
vec_tr <- c(rep("a",200*0.06),rep("b",200*0.44),rep("c",200*0.5))
vec_con <- c(rep("a",180*0.03),rep("b",180*0.735),rep("c",180*0.24))
vec_tr_2 <- rnorm(200, mean = 51 , sd = 15)
vec_con_2 <- rnorm(180, mean = 51 , sd = 13)
input_data = rbind(data.frame(treat = 1, vec = vec_tr, vec_2 = vec_tr_2),data.frame(treat = 0, vec = vec_con, vec_2 = vec_con_2))
treat_vec_name = "treat"
fun_sef_df(input_data,treat_vec_name)
input_data = rbind(data.frame(treat = 1, vec = vec_tr),data.frame(treat = 0, vec = vec_con))
fun_sef_df(input_data,treat_vec_name)
input_data = rbind(data.frame(treat = 1, vec = vec_tr_2),data.frame(treat = 0, vec = vec_con_2))
fun_sef_df(input_data,treat_vec_name)
vec_tr <- c(rep("a",200*0.06),rep("b",200*0.44))#,rep("c",200*0.5))
vec_con <- c(rep("a",180*0.03),rep("b",180*0.735))#,rep("c",180*0.24))
input_data = rbind(data.frame(treat = 1, vec = vec_tr),data.frame(treat = 0, vec = vec_con))
fun_sef_df(input_data,treat_vec_name)
library(Stddif)
